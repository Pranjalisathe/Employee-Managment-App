{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Add Page\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"role\"\n}, \"Choose a role:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"Select Role\\\" selected>Select Your Role*</option><option value=\\\"Manager\\\">Manager</option><option value=\\\"Software Developer\\\">Software Developer</option><option value=\\\"Junior Software Developer\\\"> Junior Software Developer </option><option value=\\\"Software Architect\\\">Software Architect</option><option value=\\\"Intern Software Developer\\\"> Intern Software Developer </option><option value=\\\"Engineering Project Manager\\\"> Engineering Project Manager </option><option value=\\\"VP of Marketing\\\">VP of Marketing</option>\", 8);\nconst _hoisted_11 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = (...args) => $options.sub && $options.sub(...args)),\n    class: \"update\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event),\n    onBlur: _cache[1] || (_cache[1] = (...args) => _ctx.required && _ctx.required(...args)),\n    onInput: _cache[2] || (_cache[2] = (...args) => _ctx.required && _ctx.required(...args)),\n    style: _normalizeStyle($data.isRequired ? 'border-color:red;outline-color:red' : null)\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), [[_vModelText, _ctx.name]]), $data.isRequired ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    onInput: _cache[3] || (_cache[3] = (...args) => _ctx.required && _ctx.required(...args)),\n    style: {\n      \"color\": \"red\"\n    }\n  }, \" This is required ! \", 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.email = $event),\n    placeholder: \"Enter Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _createCommentVNode(\" <input type=\\\"text\\\" v-model=\\\"role\\\" placeholder=\\\"Enter Role\\\"/> \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.password = $event),\n    placeholder: \"Enter password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.role = $event),\n    id: \"role\"\n  }, _hoisted_11, 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.role]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.addEmployee && $options.addEmployee(...args))\n  }, \"Add Employee\")], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEEA,oBAAiB,YAAb,UAAQ;gCAmBVA,oBAAwC;EAAjCC,GAAG,EAAC;AAAM,GAAC,gBAAc;;qBAG9BC,UAA+D;;;6DAvBnEC,aAAUC,oBACVC,UAAiB,EACjBL,oBAqCO;IArCAM,QAAM,yCAAEC,qCAAG;IAAEC,KAAK,EAAC;sBACxBR,oBAQE;IAPAS,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,YAAY;+DACfC,SAAI;IACZC,MAAI,yCAAED,uCAAQ;IACdE,OAAK,yCAAEF,uCAAQ;IACfG,KAAK,kBAAEC,gBAAU;2DAHTJ,SAAI,KAKNI,gBAAU,kBAAnBC,oBAEI;;IAFkBH,OAAK,yCAAEF,uCAAQ;IAAEG,KAAkB,EAAlB;MAAA;IAAA;KAAmB,sBAE1D,iFACAf,oBAA+D;IAAxDS,IAAI,EAAC,MAAM;+DAAUG,UAAK;IAAED,WAAW,EAAC;iDAAnBC,UAAK,KAEjCM,2FAAqE,kBAErElB,oBAAyE;IAAlES,IAAI,EAAC,UAAU;+DAAUG,aAAQ;IAAED,WAAW,EAAC;iDAAtBC,aAAQ,KACxCO,UAAwC,kBAExCnB,oBAeS;IAfDS,IAAI,EAAC,MAAM;+DAAUG,SAAI;IAAEQ,EAAE,EAAC;0DAATR,SAAI,KAgBjCZ,oBAAoE;IAA5DS,IAAI,EAAC,QAAQ;IAAMY,OAAK,yCAAEd,qDAAW;KAAE,cAAY","names":["_createElementVNode","for","_hoisted_3","_createVNode","_component_Header","_hoisted_1","onSubmit","$options","class","type","name","placeholder","_ctx","onBlur","onInput","style","$data","_createElementBlock","_createCommentVNode","_hoisted_2","id","onClick"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add.vue"],"sourcesContent":["<template>\n  <Header />\n  <h1>Add Page</h1>\n  <form @submit=\"sub\" class=\"update\">\n    <input\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Enter Name\"\n      v-model=\"name\"\n      @blur=\"required\"\n      @input=\"required\"\n      :style=\"isRequired ? 'border-color:red;outline-color:red' : null\"\n    />\n    <p v-if=\"isRequired\" @input=\"required\" style=\"color: red\">\n      This is required !\n    </p>\n    <input type=\"text\" v-model=\"email\" placeholder=\"Enter Email\" />\n\n    <!-- <input type=\"text\" v-model=\"role\" placeholder=\"Enter Role\"/> -->\n\n    <input type=\"password\" v-model=\"password\" placeholder=\"Enter password\" />\n    <label for=\"role\">Choose a role:</label>\n\n    <select type=\"text\" v-model=\"role\" id=\"role\">\n      <option value=\"Select Role\" selected>Select Your Role*</option>\n      <option value=\"Manager\">Manager</option>\n      <option value=\"Software Developer\">Software Developer</option>\n      <option value=\"Junior Software Developer\">\n        Junior Software Developer\n      </option>\n      <option value=\"Software Architect\">Software Architect</option>\n      <option value=\"Intern Software Developer\">\n        Intern Software Developer\n      </option>\n      <option value=\"Engineering Project Manager\">\n        Engineering Project Manager\n      </option>\n      <option value=\"VP of Marketing\">VP of Marketing</option>\n    </select>\n    <button type=\"submit\" v-on:click=\"addEmployee\">Add Employee</button>\n  </form>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Add\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n      isRequired: false,\n      error: [],\n    };\n  },\n  methods: {\n    handleForm() {\n      alert();\n    },\n\n    sub(e) {\n      this.error = [];\n      if (this.name && this.password && this.role && this.email) {\n        console.warn(\"no error\");\n      }\n      if (!this.name) {\n        this.error.push(\"Name\");\n      }\n\n      if (!this.email) {\n        this.error.push(\"Email\");\n      } else if (\n        !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)\n      ) {\n        this.error.push(\"valid email \");\n      }\n      if (!this.role) {\n        this.error.push(\"Role\");\n      }\n      if (!this.password) {\n        this.error.push(\"Password\");\n      }\n      if (this.error.length != 0) {\n        alert(\"Please enter  \" + this.error);\n      }\n      e.preventDefault();\n    },\n\n    async addEmployee() {\n      // console.warn( this.employee)\n      console.log(\"Sign up\", this.name, this.email, this.role);\n      let result = await axios.post(\"http://localhost:3000/users\", {\n        email: this.email,\n        name: this.name,\n        role: this.role,\n        password: this.password,\n        status: 1,\n      });\n      console.warn(result);\n      if (result.status == 200 && this.error.length == 0) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee  added successfully!\");\n      }\n    },\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}