{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\"\n      },\n      error: {\n        name: {\n          state: false,\n          message: \"\"\n        },\n        email: {\n          state: false,\n          message: \"\"\n        },\n        password: {\n          state: false,\n          message: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    handleForm(e) {\n      e.preventDefault();\n      console.log(this.employee);\n    },\n    required(e) {\n      let value = e.target.value;\n      let name = e.target.name;\n      //  alert(name);\n      this.error[name] = {\n        state: value ? false : true,\n        message: value ? \"\" : \"This is required field!\"\n      };\n    },\n    email(e) {\n      let value = e.target.value;\n      if (!value) return false;\n      let regExp = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-zA-Z]+$\";\n      let isValid = value.match(regExp);\n      // console.log(isValid);\n      this.error.email = {\n        state: isValid ? false : true,\n        message: isValid ? \"\" : \"Enter a Valid Email\"\n      };\n      // alert();\n    },\n\n    async updateEmployee() {\n      //   console.warn( this.employee)\n\n      const result = await axios.put(\"http://localhost:3000/usersById/\" + this.$route.params.id, {\n        name: this.employee.name,\n        email: this.employee.email,\n        role: this.employee.role,\n        password: this.employee.password\n      });\n      console.warn(result.status);\n      if (result.status == 200) {\n        this.$router.push({\n          name: \"Home\"\n        });\n        alert(\"Employee updated successfully!\");\n      }\n    }\n  },\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\"http://localhost:3000/usersById/\" + this.$route.params.id);\n    // console.warn(this.$params.id);\n    this.employee = result.data;\n  }\n};","map":{"version":3,"mappings":"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","names":["Header","axios","name","components","data","employee","email","role","password","error","state","message","methods","handleForm","e","preventDefault","console","log","required","value","target","regExp","isValid","match","updateEmployee","result","put","$route","params","id","warn","status","$router","push","alert","mounted","user","localStorage","getItem","get"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add1.vue"],"sourcesContent":["<template>\n  <Header />\n <!-- update employee form 2 -->\n  <h1>Update Page</h1>\n <div class=\"testbox\">\n      <form @submit=\"handleForm\">\n        <h1>update Employee Form</h1>\n         <h4>Name<span>*</span></h4>\n        <input name=\"name\" type=\"text\" v-model=\"employee.name\" \n        @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.name.state ? 'border-color:red;outline-color:red':null\"/>\n        <p v-if=\"error.name.state\" style=\"color:red\">This is required field !</p>\n        <h4>Email Address<span>*</span></h4>\n        <input name=\"email\" type=\"text\" v-model=\"employee.email\"   \n         @blur=\"[required($event),email($event)]\" \n        @input=\"[required($event),email($event)]\"\n         :style=\"error.email.state ? 'border-color:red;outline-color:red':null\"/> \n      <p v-if=\"error.email.state\" style=\"color:red\">This is required field !</p>\n        <h4>Password</h4>\n        <input name=\"password\" type=\"password\" v-model=\"employee.password\"  \n         @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.password.state ? 'border-color:red;outline-color:red':null\" />\n         <p v-if=\"error.password.state\" style=\"color:red\">This is required field !</p>\n      <h4>Role<span>*</span></h4>\n        <select name=\"role\" type=\"text\" v-model=\"employee.role\"  id=\"role\">\n            <option value=\"Select Role\" selected>Select Your Role*</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Software Developer\">Software Developer</option>\n            <option value=\"Junior Software Developer\">Junior Software Developer</option>\n            <option value=\"Software Architect\">Software Architect</option>\n            <option value=\"Intern Software Developer\">Intern Software Developer</option>\n            <option value=\"Engineering Project Manager\">Engineering Project Manager</option>\n            <option value=\"VP of Marketing\">VP of Marketing</option>\n          </select>\n        <div class=\"btn-block\">\n          <button type=\"submit\" v-on:click=\"addEmployee\">update Employee</button>\n        </div>\n      </form>\n    </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n     error:{\n            name:{\n              state:false,\n              message:\"\"\n            },\n            email:{\n              state:false,\n              message:\"\"\n            },\n             password:{\n              state:false,\n              message:\"\"\n            }\n            \n           }\n        }\n    },  \n     methods:{\n        handleForm(e){\n            e.preventDefault();\n            console.log(this.employee);\n        },\n        required(e){\n           let value= e.target.value;\n           let name=e.target.name;\n          //  alert(name);\n          this.error[name]={\n            state:value?false:true,\n            message:value?\"\":\"This is required field!\"\n          }\n        },\n        email(e){\n          let value=e.target.value;\n          if(!value)\n           return false\n         \n\n          let regExp=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-zA-Z]+$\";\n          let isValid=value.match(regExp);\n          // console.log(isValid);\n          this.error.email={\n            state: isValid ? false : true,\n            message : isValid ? \"\":\"Enter a Valid Email\"\n          }\n          // alert();\n        },\n    async updateEmployee() {\n    //   console.warn( this.employee)\n\n      const result = await axios.put(\"http://localhost:3000/usersById/\" + this.$route.params.id,\n        {\n          name: this.employee.name,\n          email: this.employee.email,\n          role: this.employee.role,\n          password: this.employee.password,\n        }\n        \n        \n      );\n      console.warn(result.status);\n      if (result.status == 200 ) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\n      \"http://localhost:3000/usersById/\" + this.$route.params.id\n    );\n    // console.warn(this.$params.id);\n    this.employee = result.data;\n  },\n};\n\n</script>\n   <style>\n   \n      body, div, form, input, select { \n      padding: 10px;\n      margin: 10px;\n      outline: none;\n      font-family: Roboto, Arial, sans-serif;\n      font-size: 14px;\n      color: #666;\n      line-height: 22px;\n      }\n      h1, h4 {\n      margin: 15px 0 4px;\n      font-weight: 400;\n      }\n      h4 {\n      margin: 20px 0 4px;\n      font-weight: 400;\n      }\n      span {\n      color: red;\n      }\n    \n      .testbox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: inherit;\n      padding: 150px;\n      }\n      form {\n      \n      padding: 20px;\n      background: #fff;\n      box-shadow: 0 2px 5px #ccc; \n      }\n      input {\n      width: calc(100% - 10px);\n      padding: 5px;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n      vertical-align: middle;\n      }\n      input:hover, textarea:hover, select:hover {\n      outline: none;\n      border: 1px solid #095484;\n      background: #e6eef7;\n      }\n      .title-block select, .title-block input {\n      margin-bottom: 10px;\n      }\n      select {\n      padding: 7px 0;\n      border-radius: 3px;\n      border: 1px solid #ccc;\n      background: transparent;\n      }\n      select, table {\n      width: 100%;\n      }\n      \n   \n    \n      .btn-block {\n      margin-top: 20px;\n      text-align: center;\n      }\n      button {\n      width: 150px;\n      padding: 10px;\n      border: none;\n      -webkit-border-radius: 5px; \n      -moz-border-radius: 5px; \n      border-radius: 5px; \n      background-color: #FFA500;\n      font-size: 16px;\n      color: #fff;\n      cursor: pointer;\n      }\n      button:hover {\n      background-color:#754C00;\n      }\n      @media (min-width: 568px) {\n      .title-block {\n      display: flex;\n      justify-content: space-between;\n      }\n      .title-block select {\n      width: 30%;\n      margin-bottom: 0;\n      }\n      .title-block input {\n      width: 31%;\n      margin-bottom: 0;\n      }\n      th, td {\n      word-break: keep-all;\n      }\n      }\n    </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}