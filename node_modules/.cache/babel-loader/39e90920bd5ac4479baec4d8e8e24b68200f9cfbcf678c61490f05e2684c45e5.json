{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Update Page\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"testbox\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"update Employee Form\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", null, [/*#__PURE__*/_createTextVNode(\"Name\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"*\")], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h4\", null, [/*#__PURE__*/_createTextVNode(\"Email Address\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"*\")], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Password\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  key: 2,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h4\", null, [/*#__PURE__*/_createTextVNode(\"Role\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"*\")], -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"Select Role\\\" selected>Select Your Role*</option><option value=\\\"Manager\\\">Manager</option><option value=\\\"Software Developer\\\">Software Developer</option><option value=\\\"Junior Software Developer\\\">Junior Software Developer</option><option value=\\\"Software Architect\\\">Software Architect</option><option value=\\\"Intern Software Developer\\\">Intern Software Developer</option><option value=\\\"Engineering Project Manager\\\">Engineering Project Manager</option><option value=\\\"VP of Marketing\\\">VP of Marketing</option>\", 8);\nconst _hoisted_19 = [_hoisted_11];\nconst _hoisted_20 = {\n  class: \"btn-block\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createCommentVNode(\" update employee form 2 \"), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[11] || (_cache[11] = (...args) => $options.handleForm && $options.handleForm(...args))\n  }, [_hoisted_3, _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.employee.name = $event),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.required && $options.required(...args)),\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.required && $options.required(...args)),\n    style: _normalizeStyle($data.error.name.state ? 'border-color:red;outline-color:red' : null)\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), [[_vModelText, this.employee.name]]), $data.error.name.state ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"This is required field !\")) : _createCommentVNode(\"v-if\", true), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    name: \"email\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => this.employee.email = $event),\n    onBlur: _cache[4] || (_cache[4] = $event => [$options.required($event), $options.email($event)]),\n    onInput: _cache[5] || (_cache[5] = $event => [$options.required($event), $options.email($event)]),\n    style: _normalizeStyle($data.error.email.state ? 'border-color:red;outline-color:red' : null)\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), [[_vModelText, this.employee.email]]), $data.error.email.state ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"This is required field !\")) : _createCommentVNode(\"v-if\", true), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => this.employee.password = $event),\n    onBlur: _cache[7] || (_cache[7] = (...args) => $options.required && $options.required(...args)),\n    onInput: _cache[8] || (_cache[8] = (...args) => $options.required && $options.required(...args)),\n    style: _normalizeStyle($data.error.password.state ? 'border-color:red;outline-color:red' : null)\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), [[_vModelText, this.employee.password]]), $data.error.password.state ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"This is required field !\")) : _createCommentVNode(\"v-if\", true), _hoisted_10, _withDirectives(_createElementVNode(\"select\", {\n    name: \"role\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => this.employee.role = $event),\n    id: \"role\"\n  }, _hoisted_19, 512 /* NEED_PATCH */), [[_vModelSelect, this.employee.role]]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[10] || (_cache[10] = (...args) => _ctx.addEmployee && _ctx.addEmployee(...args))\n  }, \"update Employee\")])], 32 /* HYDRATE_EVENTS */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGEA,oBAAoB,YAAhB,aAAW;;EACXC,KAAK,EAAC;AAAS;gCAEbD,oBAA6B,YAAzB,sBAAoB;gCACvBA,oBAA2B,2CAAvB,MAAI,oCAAc,cAAR,GAAC;;;EAKWE,KAAiB,EAAjB;IAAA;EAAA;;gCAC3BF,oBAAoC,2CAAhC,eAAa,oCAAc,cAAR,GAAC;;;EAKEE,KAAiB,EAAjB;IAAA;EAAA;;gCAC1BF,oBAAiB,YAAb,UAAQ;;;EAKoBE,KAAiB,EAAjB;IAAA;EAAA;;iCAClCF,oBAA2B,2CAAvB,MAAI,oCAAc,cAAR,GAAC;;qBAETG,WAA+D;;EAS9DF,KAAK,EAAC;AAAW;;;6DAnC5BG,aAAUC,oBACXC,+CAA+B,EAC9BC,UAAoB,EACrBP,oBAoCS,OApCTQ,UAoCS,GAnCJR,oBAkCO;IAlCAS,QAAM,2CAAEC,mDAAU;MACvBC,UAA6B,EAC5BC,UAA2B,kBAC5BZ,oBAGwE;IAHjEa,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;oEAAeC,QAAQ,CAACF,IAAI;IACzDG,MAAI,yCAAEN,+CAAQ;IACdO,OAAK,yCAAEP,+CAAQ;IACdR,KAAK,kBAAEgB,WAAK,CAACL,IAAI,CAACM,KAAK;gEAHoBJ,QAAQ,CAACF,IAAI,KAIjDK,WAAK,CAACL,IAAI,CAACM,KAAK,kBAAzBC,oBAAyE,KAAzEC,UAAyE,EAA5B,0BAAwB,wCACrEC,UAAoC,kBACpCtB,oBAGyE;IAHlEa,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;oEAAeC,QAAQ,CAACQ,KAAK;IAC1DP,MAAI,uCAAGN,iBAAQ,CAACc,MAAM,GAAEd,cAAK,CAACc,MAAM;IACrCP,OAAK,uCAAGP,iBAAQ,CAACc,MAAM,GAAEd,cAAK,CAACc,MAAM;IACpCtB,KAAK,kBAAEgB,WAAK,CAACK,KAAK,CAACJ,KAAK;gEAHoBJ,QAAQ,CAACQ,KAAK,KAIrDL,WAAK,CAACK,KAAK,CAACJ,KAAK,kBAA1BC,oBAA0E,KAA1EK,UAA0E,EAA5B,0BAAwB,wCACpEC,UAAiB,kBACjB1B,oBAG6E;IAHtEa,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;oEAAeC,QAAQ,CAACY,QAAQ;IACpEX,MAAI,yCAAEN,+CAAQ;IACfO,OAAK,yCAAEP,+CAAQ;IACdR,KAAK,kBAAEgB,WAAK,CAACS,QAAQ,CAACR,KAAK;gEAHwBJ,QAAQ,CAACY,QAAQ,KAI5DT,WAAK,CAACS,QAAQ,CAACR,KAAK,kBAA7BC,oBAA6E,KAA7EQ,UAA6E,EAA5B,0BAAwB,wCAC5EC,WAA2B,kBACzB7B,oBASW;IATHa,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;oEAAeC,QAAQ,CAACe,IAAI;IAAGC,EAAE,EAAC;+DAAnBhB,QAAQ,CAACe,IAAI,KAU3D9B,oBAEM,OAFNgC,WAEM,GADJhC,oBAAuE;IAA/Dc,IAAI,EAAC,QAAQ;IAAMmB,OAAK,2CAAEC,6CAAW;KAAE,iBAAe","names":["_createElementVNode","class","style","_hoisted_11","_createVNode","_component_Header","_createCommentVNode","_hoisted_1","_hoisted_2","onSubmit","$options","_hoisted_3","_hoisted_4","name","type","employee","onBlur","onInput","$data","state","_createElementBlock","_hoisted_5","_hoisted_6","email","$event","_hoisted_7","_hoisted_8","password","_hoisted_9","_hoisted_10","role","id","_hoisted_20","onClick","_ctx"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add1.vue"],"sourcesContent":["<template>\n  <Header />\n <!-- update employee form 2 -->\n  <h1>Update Page</h1>\n <div class=\"testbox\">\n      <form @submit=\"handleForm\">\n        <h1>update Employee Form</h1>\n         <h4>Name<span>*</span></h4>\n        <input name=\"name\" type=\"text\" v-model=\"this.employee.name\" \n        @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.name.state ? 'border-color:red;outline-color:red':null\"/>\n        <p v-if=\"error.name.state\" style=\"color:red\">This is required field !</p>\n        <h4>Email Address<span>*</span></h4>\n        <input name=\"email\" type=\"text\" v-model=\"this.employee.email\"   \n         @blur=\"[required($event),email($event)]\" \n        @input=\"[required($event),email($event)]\"\n         :style=\"error.email.state ? 'border-color:red;outline-color:red':null\"/> \n      <p v-if=\"error.email.state\" style=\"color:red\">This is required field !</p>\n        <h4>Password</h4>\n        <input name=\"password\" type=\"password\" v-model=\"this.employee.password\"  \n         @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.password.state ? 'border-color:red;outline-color:red':null\" />\n         <p v-if=\"error.password.state\" style=\"color:red\">This is required field !</p>\n      <h4>Role<span>*</span></h4>\n        <select name=\"role\" type=\"text\" v-model=\"this.employee.role\"  id=\"role\">\n            <option value=\"Select Role\" selected>Select Your Role*</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Software Developer\">Software Developer</option>\n            <option value=\"Junior Software Developer\">Junior Software Developer</option>\n            <option value=\"Software Architect\">Software Architect</option>\n            <option value=\"Intern Software Developer\">Intern Software Developer</option>\n            <option value=\"Engineering Project Manager\">Engineering Project Manager</option>\n            <option value=\"VP of Marketing\">VP of Marketing</option>\n          </select>\n        <div class=\"btn-block\">\n          <button type=\"submit\" v-on:click=\"addEmployee\">update Employee</button>\n        </div>\n      </form>\n    </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n     error:{\n            name:{\n              state:false,\n              message:\"\"\n            },\n            email:{\n              state:false,\n              message:\"\"\n            },\n             password:{\n              state:false,\n              message:\"\"\n            }\n            \n           }\n        }\n    },  \n     methods:{\n        handleForm(e){\n            e.preventDefault();\n            console.log(this.employee);\n        },\n        required(e){\n           let value= e.target.value;\n           let name=e.target.name;\n          //  alert(name);\n          this.error[name]={\n            state:value?false:true,\n            message:value?\"\":\"This is required field!\"\n          }\n        },\n        email(e){\n          let value=e.target.value;\n          if(!value)\n           return false\n         \n\n          let regExp=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-zA-Z]+$\";\n          let isValid=value.match(regExp);\n          // console.log(isValid);\n          this.error.email={\n            state: isValid ? false : true,\n            message : isValid ? \"\":\"Enter a Valid Email\"\n          }\n          // alert();\n        },\n    async updateEmployee() {\n    //   console.warn( this.employee)\n\n      const result = await axios.put(\"http://localhost:3000/usersById/\" + this.$route.params.id,\n        {\n          name: this.employee.name,\n          email: this.employee.email,\n          role: this.employee.role,\n          password: this.employee.password,\n        }\n        \n        \n      );\n      console.warn(result.status);\n      if (result.status == 200 ) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n\n  },\n\n  async mounted() {\n   { let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\n      \"http://localhost:3000/usersById/\" + this.$route.params.id\n    );\n    // console.warn(this.$params.id);\n    this.employee = result.data;}\n  },\n};\n\n</script>\n   <style>\n   \n      body, div, form, input, select { \n      padding: 10px;\n      margin: 10px;\n      outline: none;\n      font-family: Roboto, Arial, sans-serif;\n      font-size: 14px;\n      color: #666;\n      line-height: 22px;\n      }\n      h1, h4 {\n      margin: 15px 0 4px;\n      font-weight: 400;\n      }\n      h4 {\n      margin: 20px 0 4px;\n      font-weight: 400;\n      }\n      span {\n      color: red;\n      }\n    \n      .testbox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: inherit;\n      padding: 150px;\n      }\n      form {\n      \n      padding: 20px;\n      background: #fff;\n      box-shadow: 0 2px 5px #ccc; \n      }\n      input {\n      width: calc(100% - 10px);\n      padding: 5px;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n      vertical-align: middle;\n      }\n      input:hover, textarea:hover, select:hover {\n      outline: none;\n      border: 1px solid #095484;\n      background: #e6eef7;\n      }\n      .title-block select, .title-block input {\n      margin-bottom: 10px;\n      }\n      select {\n      padding: 7px 0;\n      border-radius: 3px;\n      border: 1px solid #ccc;\n      background: transparent;\n      }\n      select, table {\n      width: 100%;\n      }\n      \n   \n    \n      .btn-block {\n      margin-top: 20px;\n      text-align: center;\n      }\n      button {\n      width: 150px;\n      padding: 10px;\n      border: none;\n      -webkit-border-radius: 5px; \n      -moz-border-radius: 5px; \n      border-radius: 5px; \n      background-color: #FFA500;\n      font-size: 16px;\n      color: #fff;\n      cursor: pointer;\n      }\n      button:hover {\n      background-color:#754C00;\n      }\n      @media (min-width: 568px) {\n      .title-block {\n      display: flex;\n      justify-content: space-between;\n      }\n      .title-block select {\n      width: 30%;\n      margin-bottom: 0;\n      }\n      .title-block input {\n      width: 31%;\n      margin-bottom: 0;\n      }\n      th, td {\n      word-break: keep-all;\n      }\n      }\n    </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}