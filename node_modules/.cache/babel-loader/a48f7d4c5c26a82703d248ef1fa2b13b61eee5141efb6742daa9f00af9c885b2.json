{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\"\n      },\n      error: []\n    };\n  },\n  methods: {\n    async updateEmployee() {\n      console.warn(this.employee);\n      const result = await axios.put(\"http://localhost:3000/usersById/\" + this.$route.params.id, {\n        name: this.employee.name,\n        email: this.employee.email,\n        role: this.employee.role,\n        password: this.employee.password\n      });\n      if (result.status == 200 && this.error.length == 0) {\n        this.$router.push({\n          name: \"Home\"\n        });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n    sub(e) {\n      this.error = [];\n      if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.employee.email)) {\n        this.error.push(\"valid email format\");\n      }\n      if (!this.employee.email) {\n        this.error.push(\"Email\");\n      }\n      if (!this.employee.role) {\n        this.error.push(\"Role\");\n      }\n      if (!this.employee.password) {\n        this.error.push(\"Password\");\n      }\n      if (this.error.length != 0) {\n        alert(\"Please enter  \" + this.error);\n      }\n      e.preventDefault();\n    }\n  },\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\"http://localhost:3000/usersById/\" + this.$route.params.id);\n    // console.warn(this.$params.id);\n    this.employee = result.data;\n  }\n};","map":{"version":3,"mappings":";AA0BA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAc,GAAG;MACrBC,OAAO,CAACC,IAAI,CAAE,IAAI,CAACR,QAAQ;MAC3B,MAAMS,MAAK,GAAI,MAAMb,KAAK,CAACc,GAAG,CAC5B,kCAAiC,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAC1D;QACEhB,IAAI,EAAE,IAAI,CAACG,QAAQ,CAACH,IAAI;QACxBI,KAAK,EAAE,IAAI,CAACD,QAAQ,CAACC,KAAK;QAC1BC,IAAI,EAAE,IAAI,CAACF,QAAQ,CAACE,IAAI;QACxBC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAACG;MAC1B,EACD;MACD,IAAIM,MAAM,CAACK,MAAK,IAAK,GAAE,IAAK,IAAI,CAACV,KAAK,CAACW,MAAK,IAAK,CAAC,EAAE;QAClD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEpB,IAAI,EAAE;QAAO,CAAC,CAAC;QACnCqB,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF,CAAC;IACDC,GAAG,CAACC,CAAC,EAAE;MACL,IAAI,CAAChB,KAAI,GAAI,EAAE;MAEf,IACE,CAAC,+CAA+C,CAACiB,IAAI,CACnD,IAAI,CAACrB,QAAQ,CAACC,KAAI,CACpB,EACA;QACA,IAAI,CAACG,KAAK,CAACa,IAAI,CAAC,oBAAoB,CAAC;MACvC;MAEA,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAACC,KAAK,EAAE;QACxB,IAAI,CAACG,KAAK,CAACa,IAAI,CAAC,OAAO,CAAC;MAC1B;MACA,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAACE,IAAI,EAAE;QACvB,IAAI,CAACE,KAAK,CAACa,IAAI,CAAC,MAAM,CAAC;MACzB;MACA,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAACG,QAAQ,EAAE;QAC3B,IAAI,CAACC,KAAK,CAACa,IAAI,CAAC,UAAU,CAAC;MAC7B;MACA,IAAI,IAAI,CAACb,KAAK,CAACW,MAAK,IAAK,CAAC,EAAE;QAC1BG,KAAK,CAAC,gBAAe,GAAI,IAAI,CAACd,KAAK,CAAC;MACtC;MACAgB,CAAC,CAACE,cAAc,EAAE;IACpB;EACF,CAAC;EAED,MAAMC,OAAO,GAAG;IACd,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C;IACAnB,OAAO,CAACC,IAAI,CAAC,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACnC,MAAMJ,MAAK,GAAI,MAAMb,KAAK,CAAC+B,GAAG,CAC5B,kCAAiC,GAAI,IAAI,CAAChB,MAAM,CAACC,MAAM,CAACC,EAAC,CAC1D;IACD;IACA,IAAI,CAACb,QAAO,GAAIS,MAAM,CAACV,IAAI;EAC7B;AACF,CAAC","names":["Header","axios","name","components","data","employee","email","role","password","error","methods","updateEmployee","console","warn","result","put","$route","params","id","status","length","$router","push","alert","sub","e","test","preventDefault","mounted","user","localStorage","getItem","get"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Update.vue"],"sourcesContent":["<template>\n  <Header />\n \n  <h1>Update Page</h1>\n   <div class=\"testbox\">\n  <form @submit=\"sub\" class=\"update\">\n  <h1> Employee Form</h1>\n    <input\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Enter Name\"\n      v-model=\"employee.name\"\n    />\n    <input type=\"text\" v-model=\"employee.email\" placeholder=\"Enter Email\" />\n    <input type=\"text\" v-model=\"employee.role\" placeholder=\"Enter Role\" />\n    <input\n      type=\"password\"\n      v-model=\"employee.password\"\n      placeholder=\"Enter password\"\n    />\n\n    <button type=\"submit\" v-on:click=\"updateEmployee\">Update Emplaoyee</button>\n  </form>\n  </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n      error: [],\n    };\n  },\n  methods: {\n    async updateEmployee() {\n      console.warn( this.employee)\n      const result = await axios.put(\n        \"http://localhost:3000/usersById/\" + this.$route.params.id,\n        {\n          name: this.employee.name,\n          email: this.employee.email,\n          role: this.employee.role,\n          password: this.employee.password,\n        }\n      );\n      if (result.status == 200 && this.error.length == 0) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n    sub(e) {\n      this.error = [];\n\n      if (\n        !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n          this.employee.email\n        )\n      ) {\n        this.error.push(\"valid email format\");\n      }\n\n      if (!this.employee.email) {\n        this.error.push(\"Email\");\n      }\n      if (!this.employee.role) {\n        this.error.push(\"Role\");\n      }\n      if (!this.employee.password) {\n        this.error.push(\"Password\");\n      }\n      if (this.error.length != 0) {\n        alert(\"Please enter  \" + this.error);\n      }\n      e.preventDefault();\n    },\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\n      \"http://localhost:3000/usersById/\" + this.$route.params.id\n    );\n    // console.warn(this.$params.id);\n    this.employee = result.data;\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}