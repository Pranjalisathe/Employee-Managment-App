[{"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/main.js":"1","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/routes.js":"2","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/App.vue":"3","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Login.vue":"4","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Update.vue":"5","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Home.vue":"6","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add1.vue":"7","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Delete.vue":"8","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Validation.vue":"9","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Form.vue":"10","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add.vue":"11","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Home2.vue":"12","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/SignUp.vue.vue":"13","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/PaginationComponent.vue":"14","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Header.vue":"15","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/PaginDz.vue":"16","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/LogOut.vue":"17"},{"size":228,"mtime":1676452870504,"results":"18","hashOfConfig":"19"},{"size":2053,"mtime":1676463563762,"results":"20","hashOfConfig":"19"},{"size":1041,"mtime":1676454561559,"results":"21","hashOfConfig":"19"},{"size":1728,"mtime":1676484076459,"results":"22","hashOfConfig":"19"},{"size":2377,"mtime":1676376308445,"results":"23","hashOfConfig":"19"},{"size":2034,"mtime":1676463176195,"results":"24","hashOfConfig":"19"},{"size":6502,"mtime":1676456295073,"results":"25","hashOfConfig":"19"},{"size":1812,"mtime":1676376355364,"results":"26","hashOfConfig":"19"},{"size":1618,"mtime":1675771156656,"results":"27","hashOfConfig":"19"},{"size":6340,"mtime":1676366073176,"results":"28","hashOfConfig":"19"},{"size":3133,"mtime":1675944970488,"results":"29","hashOfConfig":"19"},{"size":6068,"mtime":1676456125538,"results":"30","hashOfConfig":"19"},{"size":1346,"mtime":1676480651121,"results":"31","hashOfConfig":"19"},{"size":400,"mtime":1676463967865,"results":"32","hashOfConfig":"19"},{"size":1315,"mtime":1676479964573,"results":"33","hashOfConfig":"19"},{"size":7563,"mtime":1676480041291,"results":"34","hashOfConfig":"19"},{"size":0,"mtime":1676463476019,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"fjgnvy",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/main.js",[],[],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/routes.js",[],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/App.vue",[],[],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Login.vue",["81","82"],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Update.vue",["83","84","85","86"],"<template>\n  <Header />\n \n  <h1>Update Page</h1>\n   <div class=\"testbox\">\n  <form @submit=\"sub\" class=\"update\">\n  <h1> Update Employee Form</h1>\n    <input\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Enter Name\"\n      v-model=\"employee.name\"\n    />\n    <input type=\"text\" v-model=\"employee.email\" placeholder=\"Enter Email\" />\n    <input type=\"text\" v-model=\"employee.role\" placeholder=\"Enter Role\" />\n    <input\n      type=\"password\"\n      v-model=\"employee.password\"\n      placeholder=\"Enter password\"\n    />\n\n    <button type=\"submit\" v-on:click=\"updateEmployee\">Update Emplaoyee</button>\n  </form>\n  </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n      error: [],\n    };\n  },\n  methods: {\n    async updateEmployee() {\n      console.warn( this.employee)\n      const result = await axios.put(\n        \"http://localhost:3000/usersById/\" + this.$route.params.id,\n        {\n          name: this.employee.name,\n          email: this.employee.email,\n          role: this.employee.role,\n          password: this.employee.password,\n        }\n      );\n      if (result.status == 200 && this.error.length == 0) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n    sub(e) {\n      this.error = [];\n\n      if (\n        !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n          this.employee.email\n        )\n      ) {\n        this.error.push(\"valid email format\");\n      }\n\n      if (!this.employee.email) {\n        this.error.push(\"Email\");\n      }\n      if (!this.employee.role) {\n        this.error.push(\"Role\");\n      }\n      if (!this.employee.password) {\n        this.error.push(\"Password\");\n      }\n      if (this.error.length != 0) {\n        alert(\"Please enter  \" + this.error);\n      }\n      e.preventDefault();\n    },\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\n      \"http://localhost:3000/usersById/\" + this.$route.params.id\n    );\n    // console.warn(this.$params.id);\n    this.employee = result.data;\n  },\n};\n</script>\n","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Home.vue",["87"],"<template>\n<Header/>\n<h1>Home</h1>\n\n<hr>\n<h2>All Employees Details</h2>\n<table border=\"1\">\n<tr class=\"title\">\n<td>ID</td>\n<td>NAME</td>\n<td>EMAIL</td>\n<td>ROLE</td>\n<td>CREATED AT</td>\n<td>UPDATED AT</td>\n<td>ACTIONS</td>\n\n<!-- <h1>dhbsjbh</h1> -->\n</tr>\n<tr class=\"information\" v-for=\"item in employees\" :key=\"item.id\">\n\n<td v-if=\"item.status===1\">{{item.id}}</td>\n<td v-if=\"item.status===1\">{{item.name}}</td>\n<td v-if=\"item.status===1\">{{item.email}}</td>\n<td v-if=\"item.status===1\">{{item.role}}</td>\n<td v-if=\"item.status===1\">{{item.createdAt}}</td>\n<td v-if=\"item.status===1\">{{item.updatedAt}}</td>\n\n\n<td v-if=\"item.status===1\"><button id=\"updatebtn\"><router-link :to=\"'/update/'+item.id\">Update</router-link></button>\n<!-- <td v-if=\"item.status===1\"><button id=\"updatebtn\"><router-link :to=\"'/add1/'+item.id\">Update</router-link></button> -->\n<button v-if=\"item.status===1\" id=\"deletebtn\"><router-link :to=\"'/delete/'+item.id\">Delete</router-link></button>\n</td>\n\n\n\n<!-- <h1>dhbsjbh</h1> -->\n</tr>\n</table>\n</template>\n<script>\nimport axios from 'axios';\nimport Header from './Header.vue'\n\nexport default{\n    name:'Home',\n    components:{\n        Header\n    },\n    data(){\n        return{\n            employees:[],\n            currentPage:1,\n            rows:0,\n            perPage:10\n        };\n    },\n    \n   async mounted(){\n      let user=localStorage.getItem('user-info');\n      if(!user)\n      {\n        this.$router.push({name:'Home'})\n      }\n      let result=await axios.get(\"http://localhost:3000/users\");\n    //    let result=await axios.get(\"http://localhost:3000/usersPagination?page=4&limit=6\");\n      this.employees=result.data\n      console.log(\"api data\",result);\n     \n      \n    },\n  \n    \n};\n</script>\n<style>\n.information td{\n    color:black;\n    background-color:white;\n}\n\n\n\n*, *::after, *::before {\n  box-sizing: border-box;\n}\n\n  a\n      {\n          color: black;\n      }\n      a:hover \n      { \n         color:#ddd ; \n      }            \n      a:active\n      {\n      color: white;\n      }\n\n\n\n</style>","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add1.vue",["88","89"],"<template>\n  <Header />\n <!-- update employee form 2 -->\n  <h1>Update Page</h1>\n <div class=\"testbox\">\n      <form @submit=\"handleForm\">\n        <h1>update Employee Form</h1>\n         <h4>Name<span>*</span></h4>\n        <input name=\"name\" type=\"text\" v-model=\"this.employee.name\" \n        @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.name.state ? 'border-color:red;outline-color:red':null\"/>\n        <p v-if=\"error.name.state\" style=\"color:red\">This is required field !</p>\n        <h4>Email Address<span>*</span></h4>\n        <input name=\"email\" type=\"text\" v-model=\"this.employee.email\"   \n         @blur=\"[required($event),email($event)]\" \n        @input=\"[required($event),email($event)]\"\n         :style=\"error.email.state ? 'border-color:red;outline-color:red':null\"/> \n      <p v-if=\"error.email.state\" style=\"color:red\">This is required field !</p>\n        <h4>Password</h4>\n        <input name=\"password\" type=\"password\" v-model=\"this.employee.password\"  \n         @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.password.state ? 'border-color:red;outline-color:red':null\" />\n         <p v-if=\"error.password.state\" style=\"color:red\">This is required field !</p>\n      <h4>Role<span>*</span></h4>\n        <select name=\"role\" type=\"text\" v-model=\"this.employee.role\"  id=\"role\">\n            <option value=\"Select Role\" selected>Select Your Role*</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Software Developer\">Software Developer</option>\n            <option value=\"Junior Software Developer\">Junior Software Developer</option>\n            <option value=\"Software Architect\">Software Architect</option>\n            <option value=\"Intern Software Developer\">Intern Software Developer</option>\n            <option value=\"Engineering Project Manager\">Engineering Project Manager</option>\n            <option value=\"VP of Marketing\">VP of Marketing</option>\n          </select>\n        <div class=\"btn-block\">\n          <button type=\"submit\" v-on:click=\"addEmployee\">update Employee</button>\n        </div>\n      </form>\n    </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Update\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n     error:{\n            name:{\n              state:false,\n              message:\"\"\n            },\n            email:{\n              state:false,\n              message:\"\"\n            },\n             password:{\n              state:false,\n              message:\"\"\n            }\n            \n           }\n        }\n    },  \n     methods:{\n        handleForm(e){\n            e.preventDefault();\n            console.log(this.employee);\n        },\n        required(e){\n           let value= e.target.value;\n           let name=e.target.name;\n          //  alert(name);\n          this.error[name]={\n            state:value?false:true,\n            message:value?\"\":\"This is required field!\"\n          }\n        },\n        email(e){\n          let value=e.target.value;\n          if(!value)\n           return false\n         \n\n          let regExp=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-zA-Z]+$\";\n          let isValid=value.match(regExp);\n          // console.log(isValid);\n          this.error.email={\n            state: isValid ? false : true,\n            message : isValid ? \"\":\"Enter a Valid Email\"\n          }\n          // alert();\n        },\n    async updateEmployee() {\n    //   console.warn( this.employee)\n\n      const result = await axios.put(\"http://localhost:3000/usersById/\" + this.$route.params.id,\n        {\n          name: this.employee.name,\n          email: this.employee.email,\n          role: this.employee.role,\n          password: this.employee.password,\n        }\n        \n        \n      );\n      console.warn(result.status);\n      if (result.status == 200 ) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee updated successfully!\");\n      }\n    },\n\n  },\n\n  async mounted() {\n   try{ let user = localStorage.getItem(\"user-info\");\n    // console.warn(user);\n    console.warn(this.$route.params.id);\n    const result = await axios.get(\n      \"http://localhost:3000/usersById/\" + this.$route.params.id\n    );\n    // console.warn(this.$params.id);\n    this.employee = result.data;}\n    catch(err)\n    {\n      console.log(err);\n    }\n  },\n};\n\n</script>\n   <style>\n   \n      body, div, form, input, select { \n      padding: 10px;\n      margin: 10px;\n      outline: none;\n      font-family: Roboto, Arial, sans-serif;\n      font-size: 14px;\n      color: #666;\n      line-height: 22px;\n      }\n      h1, h4 {\n      margin: 15px 0 4px;\n      font-weight: 400;\n      }\n      h4 {\n      margin: 20px 0 4px;\n      font-weight: 400;\n      }\n      span {\n      color: red;\n      }\n    \n      .testbox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: inherit;\n      padding: 150px;\n      }\n      form {\n      \n      padding: 20px;\n      background: #fff;\n      box-shadow: 0 2px 5px #ccc; \n      }\n      input {\n      width: calc(100% - 10px);\n      padding: 5px;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n      vertical-align: middle;\n      }\n      input:hover, textarea:hover, select:hover {\n      outline: none;\n      border: 1px solid #095484;\n      background: #e6eef7;\n      }\n      .title-block select, .title-block input {\n      margin-bottom: 10px;\n      }\n      select {\n      padding: 7px 0;\n      border-radius: 3px;\n      border: 1px solid #ccc;\n      background: transparent;\n      }\n      select, table {\n      width: 100%;\n      }\n      \n   \n    \n      .btn-block {\n      margin-top: 20px;\n      text-align: center;\n      }\n      button {\n      width: 150px;\n      padding: 10px;\n      border: none;\n      -webkit-border-radius: 5px; \n      -moz-border-radius: 5px; \n      border-radius: 5px; \n      background-color: #FFA500;\n      font-size: 16px;\n      color: #fff;\n      cursor: pointer;\n      }\n      button:hover {\n      background-color:#754C00;\n      }\n      @media (min-width: 568px) {\n      .title-block {\n      display: flex;\n      justify-content: space-between;\n      }\n      .title-block select {\n      width: 30%;\n      margin-bottom: 0;\n      }\n      .title-block input {\n      width: 31%;\n      margin-bottom: 0;\n      }\n      th, td {\n      word-break: keep-all;\n      }\n      }\n    </style>","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Delete.vue",["90","91"],"<template>\n<Header/>\n\n<form class=\"update\">\n<h1>Delete Employee form</h1>\n<input type=\"text\" name=\"name\"  placeholder=\"Enter Name\" v-model=\"employee.name\"/>\n<input type=\"text\" v-model=\"employee.email\" placeholder=\"Enter Email\"/>\n<input type=\"text\" v-model=\"employee.role\" placeholder=\"Enter Role\"/>\n<input type=\"password\" v-model=\"employee.password\" placeholder=\"Enter password\"/>\n\n<button type=\"button\" v-on:click=\"deleteEmployee\">Delete Emplaoyee</button>\n</form>\n</template>\n<script>\nimport Header from './Header.vue'\nimport axios from 'axios';\nexport default{\n    name:'Delete',\n    components:{\n        Header,\n    },\n       data()\n    {\n        return{\n            employee:{\n            name:\"\",\n            email:\"\",\n            role:\"\",\n            password:\"\"\n            }\n        }\n    },   methods:{\n      async  deleteEmployee()\n      {\n        //this is for deleting the entry permanently from the db\n            // console.warn( this.employee)\n            //   const result =await axios.delete(\"http://localhost:3000/usersById/\"+this.$route.params.id,{ });\n        //code bellow is just changes the status of the entry ,and not delete it from the db\n              const result =await axios.put(\"http://localhost:3000/usersStatus/\"+this.$route.params.id,{ });\n            if(result.status==200)\n            {\n               \n                this.$router.push({name:'Home'});\n                  alert(\"Employee  deleted successfully!\");\n\n            }\n        }\n    \n    },\n \n    async mounted()\n    {\n        let user =localStorage.getItem('user-info')\n        \n       console.warn(this.$route.params.id) \n       const result =await axios.get(\"http://localhost:3000/usersById/\"+this.$route.params.id);\n       console.warn(result.data.name)\n       this.employee=result.data;\n    }\n    }\n\n</script>\n\n","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Validation.vue",["92"],"<template>\n    <div id=\"visa\">\n        <div class=\"container\">\n            <div class=\"large-12 medium-12 \">\n\n                <div style=\"margin: 20px;\" class=\"col-sm-12 btn btn-info\"> Email Validation in Vue.js </div>\n                <form @submit.prevent=\"handleSubmission\">\n                    <div class=\"row form-group\">\n                        <div class=\"col-sm-4\">\n                            <label class=\"control-label col-sm-4\" for=\"Mobilenumber\"> <label for=\"email\">Email\n                                    Address:</label></label>\n                        </div>\n                        <div class=\"col-sm-8\">\n                            <input type=\"text\" v-model=\"email\" required class=\"form-control\"> <br>\n                            <span v-if=\"msg.email\" className=\"text-danger mrgnbtn\">{{ msg.email }}</span>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Home',\n    data() {\n        return {\n            email: '',\n            msg: [],\n        }\n    },\n    watch: {\n        email(value) {\n            this.validateEmail(value);\n        }\n    },\n    methods: {\n        validateEmail(value) {\n            //eslint-disable-next-line\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n                this.msg['email'] = '';\n            } else {\n                this.msg['email'] = 'Invalid Email Address';\n            }\n        },\n\n    }\n}\n</script>\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Form.vue",["93","94"],"<template>\n<Header/>\n<h1>Add  Page</h1>\n<hr>\n\n <div class=\"testbox\">\n      <form @submit=\"handleForm\">\n        <h1>Add Employee Form</h1>\n         <h4>Name<span>*</span></h4>\n        <input name=\"name\" type=\"text\" v-model=\"employee.name\" \n        @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.name.state ? 'border-color:red;outline-color:red':null\"/>\n        <p v-if=\"error.name.state\" style=\"color:red\">This is required field !</p>\n        <h4>Email Address<span>*</span></h4>\n        <input name=\"email\" type=\"text\" v-model=\"employee.email\"   \n         @blur=\"[required($event),email($event)]\" \n        @input=\"[required($event),email($event)]\"\n         :style=\"error.email.state ? 'border-color:red;outline-color:red':null\"/> \n      <p v-if=\"error.email.state\" style=\"color:red\">This is required field !</p>\n        <h4>Password</h4>\n        <input name=\"password\" type=\"password\" v-model=\"employee.password\"  \n         @blur=\"required\" \n        @input=\"required\"\n         :style=\"error.password.state ? 'border-color:red;outline-color:red':null\" />\n         <p v-if=\"error.password.state\" style=\"color:red\">This is required field !</p>\n      <h4>Role<span>*</span></h4>\n        <select name=\"role\" type=\"text\" v-model=\"employee.role\"  id=\"role\">\n            <option value=\"Select Role\" selected>Select Your Role*</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Software Developer\">Software Developer</option>\n            <option value=\"Junior Software Developer\">Junior Software Developer</option>\n            <option value=\"Software Architect\">Software Architect</option>\n            <option value=\"Intern Software Developer\">Intern Software Developer</option>\n            <option value=\"Engineering Project Manager\">Engineering Project Manager</option>\n            <option value=\"VP of Marketing\">VP of Marketing</option>\n          </select>\n        <div class=\"btn-block\">\n          <button type=\"submit\" v-on:click=\"addEmployee\">Add Employee</button>\n        </div>\n      </form>\n    </div>\n\n</template>\n<script>\nimport Header from './Header.vue'\nimport axios from 'axios';\n\nexport default{\n    name:'Form',\n    components:{\n        Header,\n    },\n         data()\n    {\n        return{\n            employee:{\n            name:\"\",\n            email:\"\",\n            role:\"\",\n            password:\"\"\n            },\n           error:{\n            name:{\n              state:false,\n              message:\"\"\n            },\n            email:{\n              state:false,\n              message:\"\"\n            },\n             password:{\n              state:false,\n              message:\"\"\n            }\n            \n           }\n        }\n    },  \n     methods:{\n        handleForm(e){\n            e.preventDefault();\n            console.log(this.employee);\n        },\n        required(e){\n           let value= e.target.value;\n           let name=e.target.name;\n          //  alert(name);\n          this.error[name]={\n            state:value?false:true,\n            message:value?\"\":\"This is required field!\"\n          }\n        },\n        email(e){\n          let value=e.target.value;\n          if(!value)\n           return false\n         \n\n          let regExp=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-zA-Z]+$\";\n          let isValid=value.match(regExp);\n          // console.log(isValid);\n          this.error.email={\n            state: isValid ? false : true,\n            message : isValid ? \"\":\"Enter a Valid Email\"\n          }\n          // alert();\n        },\n      async  addEmployee()\n      {\n            // console.warn( this.employee)\n                console.log(\"Sign up\",this.name,this.email,this.role);\n             let result = await axios.post(\"http://localhost:3000/users\",{\n                email:this.employee.email,\n                name:this.employee.name,\n                role:this.employee.role,\n                password:this.employee.password,\n                status:1\n             });\n             console.warn(result);\n            if(result.status==200 )\n            {\n                this.$router.push({name:'Home'});\n                alert(\"Employee  added successfully!\")\n            }\n           \n        }   \n    },\n \n    async mounted()\n    {\n        let user =localStorage.getItem('user-info')\n     \n    }\n}\n      \n    \n\n</script>\n   <style>\n   \n      body, div, form, input, select { \n      padding: 10px;\n      margin: 10px;\n      outline: none;\n      font-family: Roboto, Arial, sans-serif;\n      font-size: 14px;\n      color: #666;\n      line-height: 22px;\n      }\n      h1, h4 {\n      margin: 15px 0 4px;\n      font-weight: 400;\n      }\n      h4 {\n      margin: 20px 0 4px;\n      font-weight: 400;\n      }\n      span {\n      color: red;\n      }\n    \n      .testbox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: inherit;\n      padding: 150px;\n      }\n      form {\n      \n      padding: 20px;\n      background: #fff;\n      box-shadow: 0 2px 5px #ccc; \n      }\n      input {\n      width: calc(100% - 10px);\n      padding: 5px;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n      vertical-align: middle;\n      }\n      input:hover, textarea:hover, select:hover {\n      outline: none;\n      border: 1px solid #095484;\n      background: #e6eef7;\n      }\n      .title-block select, .title-block input {\n      margin-bottom: 10px;\n      }\n      select {\n      padding: 7px 0;\n      border-radius: 3px;\n      border: 1px solid #ccc;\n      background: transparent;\n      }\n      select, table {\n      width: 100%;\n      }\n      \n   \n    \n      .btn-block {\n      margin-top: 20px;\n      text-align: center;\n      }\n      button {\n      width: 150px;\n      padding: 10px;\n      border: none;\n      -webkit-border-radius: 5px; \n      -moz-border-radius: 5px; \n      border-radius: 5px; \n      background-color: #FFA500;\n      font-size: 16px;\n      color: #fff;\n      cursor: pointer;\n      }\n      button:hover {\n      background-color:#754C00;\n      }\n      @media (min-width: 568px) {\n      .title-block {\n      display: flex;\n      justify-content: space-between;\n      }\n      .title-block select {\n      width: 30%;\n      margin-bottom: 0;\n      }\n      .title-block input {\n      width: 31%;\n      margin-bottom: 0;\n      }\n      th, td {\n      word-break: keep-all;\n      }\n      }\n    </style>","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Add.vue",["95","96","97","98"],"<template>\n  <Header />\n  <h1>Add Page</h1>\n  <form @submit=\"sub\" class=\"update\">\n    <input\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Enter Name\"\n      v-model=\"name\"\n      @blur=\"required\"\n      @input=\"required\"\n      :style=\"isRequired ? 'border-color:red;outline-color:red' : null\"\n    />\n    <p v-if=\"isRequired\" @input=\"required\" style=\"color: red\">\n      This is required !\n    </p>\n    <input type=\"text\" v-model=\"email\" placeholder=\"Enter Email\" />\n\n    <!-- <input type=\"text\" v-model=\"role\" placeholder=\"Enter Role\"/> -->\n\n    <input type=\"password\" v-model=\"password\" placeholder=\"Enter password\" />\n    <label for=\"role\">Choose a role:</label>\n\n    <select type=\"text\" v-model=\"role\" id=\"role\">\n      <option value=\"Select Role\" selected>Select Your Role*</option>\n      <option value=\"Manager\">Manager</option>\n      <option value=\"Software Developer\">Software Developer</option>\n      <option value=\"Junior Software Developer\">\n        Junior Software Developer\n      </option>\n      <option value=\"Software Architect\">Software Architect</option>\n      <option value=\"Intern Software Developer\">\n        Intern Software Developer\n      </option>\n      <option value=\"Engineering Project Manager\">\n        Engineering Project Manager\n      </option>\n      <option value=\"VP of Marketing\">VP of Marketing</option>\n    </select>\n    <button type=\"submit\" v-on:click=\"addEmployee\">Add Employee</button>\n  </form>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Add\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employee: {\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        password: \"\",\n      },\n      isRequired: false,\n      error: [],\n    };\n  },\n  methods: {\n    handleForm() {\n      alert();\n    },\n\n    sub(e) {\n      this.error = [];\n      if (this.name && this.password && this.role && this.email) {\n        console.warn(\"no error\");\n      }\n      if (!this.name) {\n        this.error.push(\"Name\");\n      }\n\n      if (!this.email) {\n        this.error.push(\"Email\");\n      } else if (\n        !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)\n      ) {\n        this.error.push(\"valid email \");\n      }\n      if (!this.role) {\n        this.error.push(\"Role\");\n      }\n      if (!this.password) {\n        this.error.push(\"Password\");\n      }\n      if (this.error.length != 0) {\n        alert(\"Please enter  \" + this.error);\n      }\n      e.preventDefault();\n    },\n\n    async addEmployee() {\n      // console.warn( this.employee)\n      console.log(\"Sign up\", this.name, this.email, this.role);\n      let result = await axios.post(\"http://localhost:3000/users\", {\n        email: this.email,\n        name: this.name,\n        role: this.role,\n        password: this.password,\n        status: 1,\n      });\n      console.warn(result);\n      if (result.status == 200 && this.error.length == 0) {\n        this.$router.push({ name: \"Home\" });\n        alert(\"Employee  added successfully!\");\n      }\n    },\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n  },\n};\n</script>\n","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Home2.vue",["99","100","101"],"<template>\n  <Header />\n  <h1>Home2</h1>\n  <!-- <a>Button</a> -->\n  <!-- <select name=\"role\" type=\"Integer\" v-model=\"this.limitcount\"  id=\"lmtCnt\">\n            <option value=\"Select Role\" selected>Select employees on page*</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n</select> -->\n  <br />\n  \n  <!-- <a class=\"link\"  href=\"#\" value=\"2\" >2</a> -->\n  <!-- <button type=\"button\" style=\"  color: black;\n  \n  margin: 6px;\n  text-decoration: none; display: inline-block;\" @click=\"fetchData(1)\">1</button>\n  <button type=\"button\" @click=\"fetchData(2)\">2</button>\n  \n  <button type=\"button\" @click=\"fetchData(3)\">3</button>\n  <button type=\"button\" @click=\"fetchData(4)\">4</button>\n  <hr> -->\n  <!-- <li class=\"paginationButtons\" v-for=\"item of employeePageCnt\" >\n \n  <button type=\"button\" @click=\"fetchData(item)\">{{item}}</button>\n \n </li> -->\n \n  <!-- <a v-on:click=\"activeStatus = !activeStatus\">bkabd</a> -->\n\n  <div\n    class=\"pagination\"\n    style=\"display: inline\"\n    v-for=\"(val,index) of employeePageCnt\"\n  >\n    <a\n      class=\"link\"\n      :style=\"(val===this.pgno) ? { 'background-color': 'orange' } : { 'background-color': '#ddd' }\"\n      style=\"overflow: hidden\"\n      @click=\"fetchData(val)\"\n \n      >{{ val }}</a\n    >\n  </div>\n\n  <h2>Employees Details using pagination</h2>\n  <table border=\"1\">\n    <tr class=\"title\">\n      <td>ID</td>\n      <td>NAME</td>\n      <td>EMAIL</td>\n      <td>ROLE</td>\n      <td>CREATED AT</td>\n      <td>UPDATED AT</td>\n      <td>ACTIONS</td>\n\n      <!-- <h1>dhbsjbh</h1> -->\n    </tr>\n    <tr class=\"information\" v-for=\"item in employees\" :key=\"item.id\">\n      <td v-if=\"item.status === 1\">{{ item.id }}</td>\n      <td v-if=\"item.status === 1\">{{ item.name }}</td>\n      <td v-if=\"item.status === 1\">{{ item.email }}</td>\n      <td v-if=\"item.status === 1\">{{ item.role }}</td>\n      <td v-if=\"item.status === 1\">{{ item.createdAt }}</td>\n      <td v-if=\"item.status === 1\">{{ item.updatedAt }}</td>\n\n      <td v-if=\"item.status === 1\">\n        <a id=\"updatebtn\"\n          ><router-link :to=\"'/update/' + item.id\"\n            ><i\n              class=\"fas fa-edit\"\n              style=\"\n                color: black;\n                padding: 10px;\n                margin: 5px;\n                height: 25px;\n              \" /></router-link\n        ></a>\n        <!-- <a id=\"updatebtn\"><router-link :to=\"'/add1/'+item.id\"><i class=\"fas fa-edit\" style=\"color:black;padding:10px;margin:5px;height:25px\" /></router-link></a> -->\n        <!-- <td v-if=\"item.status===1\"><button id=\"updatebtn\"><router-link :to=\"'/add1/'+item.id\">Update</router-link></button> -->\n        <a v-if=\"item.status === 1\" id=\"deletebtn\"\n          ><router-link :to=\"'/delete/' + item.id\"\n            ><i\n              class=\"fas fa-trash\"\n              style=\"\n                color: black;\n                padding: 10px;\n                margin: 5px;\n                height: 25px;\n              \" /></router-link\n        ></a>\n      </td>\n\n      <!-- <h1>dhbsjbh</h1> -->\n    </tr>\n  </table>\n</template>\n<script>\nimport axios from \"axios\";\nimport Header from \"./Header.vue\";\nexport default {\n  name: \"Home2\",\n  components: {\n    Header,\n  },\n  data() {\n    return {\n      employees: [],\n      activeStatus: \"false\",\n      pagecount: \"1\",\n      limitcount: 10,\n      employeeCnt: \"\",\n      employeePageCnt: \"\",\n      pgno:\"1\",\n      pageActiveClass:\"class1\"\n    };\n  },\n\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.$router.push({ name: \"Home2\" });\n    }\n\n    //   let result=await axios.get(\"http://localhost:3000/users\");\n    console.warn(this.pagecount);\n    console.log(\"mounted\");\n    let result = await axios.get(\n      \"http://localhost:3000/usersPagination?page=\" +\n        this.pagecount +\n        \"&limit=\" +\n        this.limitcount\n    );\n    let resultCount = await axios.get(\n      \" http://localhost:3000/usersPaginationCount?page\" +\n        this.pagecount +\n        \"&limit=\" +\n        this.limitcount\n    );\n\n    this.employees = result.data;\n    this.employeeCnt = resultCount.data.count;\n    let remainder = this.employeeCnt % this.limitcount;\n    let rem = (this.employeeCnt - remainder) / this.limitcount;\n    this.employeePageCnt = remainder === 0 ? rem : rem + 1;\n    console.log(\n      \"api data\",\n      this.employeeCnt,\n      this.limitcount,\n      this.employeePageCnt,\n      this.remainder,\n      this.activeStatus,\n      this.pgno\n    );\n  },\n\n  methods: {\n    async fetchData(data) {\n      \n      try{\n        this.pagecount = data;\n      this.pgno=this.pagecount;\n      this.activeStatus = \"true\";\n      console.log(\"dfs\", data, this.pagecount, this.activeStatus,this.pgno);\n      \n      let result = await axios.get(\n        \"http://localhost:3000/usersPagination?page=\" +\n          this.pagecount +\n          \"&limit=\" +\n          this.limitcount\n      );\n      this.employees = result.data;\n      }\n      catch(err)\n      {\n        console.log(err);\n      }\n    },\n  },\n};\n</script>\n<style>\n/* Pagination links */\n.pagination {\n  display: block;\n}\n.pagination a {\n  color: black;\n  float: middle;\n  background-color: #ddd;\n  padding: 8px 16px;\n  text-decoration: none;\n  transition: background-color 0.3s;\n}\n.class1 a {\n  color: black;\n  float: middle;\n  background-color: #ddd;\n  padding: 8px 16px;\n  text-decoration: none;\n  transition: background-color 0.3s;\n}\n#paginationBtn:active {\n  background-color: black;\n}\n\n/* Style the active/current link */\n\n/* Add a grey background color on mouse-over */\n\n.dynamic {\n  background-color: purple;\n  color: red;\n}\n.static {\n  color: blue;\n}\n.pagination a:hover:not(.active) {\n  background-color: orange;\n  border: 02px solid black;\n}\n.title td{\n   border: 1px solid black;\n  border-radius: 10px;\n  padding:10px;\n}\n\n\n\n    .small .ipt{\n  width: 100px;\n  height:30px;\n}\n.small .text{\n  font-size: 18px;\n}\n\n.medium .ipt{\n  width: 300px;\n  height:50px;\n}\n.medium .text{\n  font-size: 32px;\n}\n\n.large .ipt{\n  width: 600px;\n  height:100px;\n}\n.large .text{\n  font-size: 64px;\n}\n\n</style>\n","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/SignUp.vue.vue",[],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/PaginationComponent.vue",["102"],"<template>\n<Header/>\n<h1>Logout</h1>\n\n<hr>\n</template>\n<script>\nimport axios from 'axios';\nimport Header from './Header.vue'\nexport default{\n      name: \"PaginationComponent\",\n      components:{\n        Header\n    },\n  data() {\n    return {\n      \n    };\n  },\n    methods: {\n      logout()\n      {\n        localStorage.clear();\n        this.$router.push({name:'Login'});\n      }\n    }\n}\n    </script>","/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/Header.vue",["103"],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/PaginDz.vue",[],"/home/pranjalisathe/Desktop/employeeDetailsApi-main/src/components/LogOut.vue",[],{"ruleId":"104","severity":2,"message":"105","line":20,"column":8,"nodeType":"106","messageId":"107","endLine":20,"endColumn":14},{"ruleId":"108","severity":2,"message":"109","line":22,"column":9,"nodeType":"110","messageId":"111","endLine":22,"endColumn":16},{"ruleId":"108","severity":2,"message":"112","line":30,"column":9,"nodeType":"110","messageId":"111","endLine":30,"endColumn":17},{"ruleId":"113","severity":2,"message":"114","line":66,"column":17,"nodeType":"110","messageId":"115","endLine":66,"endColumn":18,"suggestions":"116"},{"ruleId":"113","severity":2,"message":"114","line":66,"column":33,"nodeType":"110","messageId":"115","endLine":66,"endColumn":34,"suggestions":"117"},{"ruleId":"104","severity":2,"message":"118","line":90,"column":9,"nodeType":"106","messageId":"107","endLine":90,"endColumn":13},{"ruleId":"108","severity":2,"message":"119","line":45,"column":10,"nodeType":"110","messageId":"111","endLine":45,"endColumn":16},{"ruleId":"108","severity":2,"message":"112","line":47,"column":9,"nodeType":"110","messageId":"111","endLine":47,"endColumn":17},{"ruleId":"104","severity":2,"message":"118","line":128,"column":13,"nodeType":"106","messageId":"107","endLine":128,"endColumn":17},{"ruleId":"108","severity":2,"message":"120","line":18,"column":10,"nodeType":"110","messageId":"111","endLine":18,"endColumn":18},{"ruleId":"104","severity":2,"message":"118","line":53,"column":13,"nodeType":"106","messageId":"107","endLine":53,"endColumn":17},{"ruleId":"108","severity":2,"message":"119","line":26,"column":11,"nodeType":"110","messageId":"111","endLine":26,"endColumn":17},{"ruleId":"108","severity":2,"message":"121","line":50,"column":10,"nodeType":"110","messageId":"111","endLine":50,"endColumn":16},{"ruleId":"104","severity":2,"message":"118","line":132,"column":13,"nodeType":"106","messageId":"107","endLine":132,"endColumn":17},{"ruleId":"108","severity":2,"message":"122","line":48,"column":9,"nodeType":"110","messageId":"111","endLine":48,"endColumn":14},{"ruleId":"113","severity":2,"message":"114","line":81,"column":17,"nodeType":"110","messageId":"115","endLine":81,"endColumn":18,"suggestions":"123"},{"ruleId":"113","severity":2,"message":"114","line":81,"column":33,"nodeType":"110","messageId":"115","endLine":81,"endColumn":34,"suggestions":"124"},{"ruleId":"104","severity":2,"message":"118","line":116,"column":9,"nodeType":"106","messageId":"107","endLine":116,"endColumn":13},{"ruleId":"125","severity":2,"message":"126","line":30,"column":3,"nodeType":"127","endLine":34,"endColumn":4},{"ruleId":"128","severity":2,"message":"129","line":33,"column":17,"nodeType":"106","endLine":33,"endColumn":22},{"ruleId":"108","severity":2,"message":"130","line":101,"column":9,"nodeType":"110","messageId":"111","endLine":101,"endColumn":16},{"ruleId":"104","severity":2,"message":"131","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":13},{"ruleId":"108","severity":2,"message":"132","line":20,"column":10,"nodeType":"110","messageId":"111","endLine":20,"endColumn":18},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","vue/multi-word-component-names","Component name \"Login\" should always be multi-word.","Literal","unexpected","Component name \"Update\" should always be multi-word.","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["133","134"],["135","136"],"'user' is assigned a value but never used.","Component name \"Home\" should always be multi-word.","Component name \"Delete\" should always be multi-word.","Component name \"Form\" should always be multi-word.","Component name \"Add\" should always be multi-word.",["137","138"],["139","140"],"vue/require-v-for-key","Elements in iteration expect to have 'v-bind:key' directives.","VStartTag","vue/no-unused-vars","'index' is defined but never used.","Component name \"Home2\" should always be multi-word.","'axios' is defined but never used.","Component name \"Header\" should always be multi-word.",{"messageId":"141","fix":"142","desc":"143"},{"messageId":"144","fix":"145","desc":"146"},{"messageId":"141","fix":"147","desc":"143"},{"messageId":"144","fix":"148","desc":"146"},{"messageId":"141","fix":"149","desc":"143"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"141","fix":"151","desc":"143"},{"messageId":"144","fix":"152","desc":"146"},"removeEscape",{"range":"153","text":"154"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"155","text":"156"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"157","text":"154"},{"range":"158","text":"156"},{"range":"159","text":"154"},{"range":"160","text":"156"},{"range":"161","text":"154"},{"range":"162","text":"156"},[1528,1529],"",[1528,1528],"\\",[1544,1545],[1544,1544],[2128,2129],[2128,2128],[2144,2145],[2144,2144]]